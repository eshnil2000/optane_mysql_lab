FROM maxogden/docker-adventure-time
ADD welcome.txt /root
#UNCOMMENT THE FOLLOWING TO INSTALL MYSQL DIRECTLY TO KEEP UBUNTU INSTALLATION FROM maxogden/docker-adventure-time
RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server

#FROM mysql:5.7

ARG VCS_REF

LABEL org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.name="sysbench-docker" \
      org.label-schema.description="Dockerfile for MySQL and Sysbench to benchmark systems, based on Brett Fisher HPE image" \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="tbd" \
      org.label-schema.vendor="Nilesh S" \
      org.label-schema.schema-version="1.0"


##
## install sysbench
RUN apt-get update
RUN apt-get -y install curl
RUN curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.deb.sh | bash && apt -y install sysbench

##
## change these values to your environment and needs
#######################
ENV SYSBENCH_TABLE_SIZE=1000 \
    SYSBENCH_TABLE_COUNT=3 \
    SYSBENCH_NUM_THREADS=10 \
    SYSBENCH_MAX_TIME=1200 \
    SYSBENCH_MAX_REQUESTS=100

# mysql_buffersize should be 60-80% of memory
ENV MYSQL_ALLOW_EMPTY_PASSWORD=true \
    MYSQL_DATABASE=sys \
    MYSQL_CONFIG=/etc/mysql/mysql.conf.d/mysqld.cnf \
    MYSQL_BUFFERSIZE=10M \
    MYSQL_LOGSIZE=2M \
    MYSQL_FLUSHLOG=1 \
    MYSQL_FLUSHMETHOD=O_DIRECT
#######################

# update mysql config file with our setting above, which means mysql ENV's are set at build time
RUN echo "innodb_buffer_pool_size = ${MYSQL_BUFFERSIZE}" >> ${MYSQL_CONFIG} && \
    echo "innodb_log_file_size = ${MYSQL_LOGSIZE}" >> ${MYSQL_CONFIG} && \
    echo "innodb_flush_log_at_trx_commit = ${MYSQL_FLUSHLOG}" >> ${MYSQL_CONFIG} && \
    echo "innodb_flush_method = ${MYSQL_FLUSHMETHOD}" >> ${MYSQL_CONFIG}


# Prepare sysbench, use this when there is no Ubuntu installed, and MySQL installed with the FROM statement
RUN mkdir /docker-entrypoint-initdb.d/ && echo 'sysbench --db-driver=mysql   --test= /usr/share/sysbench/tests/include/oltp_legacy/oltp.lua --oltp-tables-count=${SYSBENCH_TABLE_COUNT} --oltp-table-size=${SYSBENCH_TABLE_SIZE} --mysql-db=sys --mysql-user=root --mysql-socket=/run/mysqld/mysqld.sock prepare' > /docker-entrypoint-initdb.d/sysbench_prepare.sh && \
    chmod +x /docker-entrypoint-initdb.d/sysbench_prepare.sh

#Prepare sysbench, use this when Ubuntu is installed, and MySQL is installed via shell command
# Prepare sysbench, use this when there is no Ubuntu installed, and MySQL installed with the FROM statement

#Execute sysbench this time
RUN echo 'sysbench --db-driver=mysql --mysql-user=root  --test= /usr/share/sysbench/tests/include/oltp_legacy/oltp.lua --oltp-tables-count=${SYSBENCH_TABLE_COUNT} --oltp-table-size=${SYSBENCH_TABLE_SIZE} --mysql-db=sys  --mysql-socket=/run/mysqld/mysqld.sock --oltp-test-mode=complex --num-threads=${SYSBENCH_NUM_THREADS} --max-time=${SYSBENCH_MAX_TIME} --max-requests=${SYSBENCH_MAX_REQUESTS} --mysql-db=${MYSQL_DATABASE}  run ' > /opt/sysbench_run.sh && chmod +x /opt/sysbench_run.sh

#Restart MYSQL
CMD  chown -R mysql:mysql /var/lib/mysql && /etc/init.d/mysql restart

WORKDIR /root
#End up at shell prompt
ENTRYPOINT cat /root/welcome.txt && chown -R mysql:mysql /var/lib/mysql && /etc/init.d/mysql restart &&  /bin/bash

